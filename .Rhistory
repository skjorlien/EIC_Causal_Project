View(df)
View(df)
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_split(state, "!!")[1])
View(tdf)
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate")
View(tdf)
x <- Georgia!!Percent below poverty level!!Estimate
x <- "Georgia!!Percent below poverty level!!Estimate"
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
rowwise() %>%
mutate(state = str_split(state, "!!")[1])
View(tdf)
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
rowwise() %>%
mutate(state = str_split(state, "!!")[1][1])
View(tdf)
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
rowwise() %>%
mutate(state = str_split(state, "!!")[[1]])
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
rowwise() %>%
mutate(state = str_split(state, "!!")[1])
View(tdf)
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
rowwise() %>%
mutate(state = str_split(state, "!!")[1][[1]])
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
rowwise() %>%
mutate(state = str_split(state, "!!")[1][1])
View(tdf)
str_extract(x, "^[.]!!")
str_extract(x, "[.]!!")
str_extract(x, "[.]")
str_extract(x, ".!!")
str_extract(x, ".+!!")
str_extract(x, "^.+!!")
str_extract(x, "!!.*")
str_extract(x, "^.*!!")
str_extract(x, "[^!!]")
str_extract(x, "[^.!!]")
str_extract(x, "[^!!]*")
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(x, "[^!!]*"))
View(tdf)
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*"))
View(tdf)
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate)
View(tdf)
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate) %>%
select(!AGE)
View(tdf)
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate) %>%
select(!AGE, !contains("Related"))
View(tdf)
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate) %>%
select(!AGE) %>%
select(!contains("Related"))
View(tdf)
names(tdf) <- c("state", "total", "U18", "18to64", "65o")
dir <- here("data/raw/Poverty")
i <- 1
dir <- here("data/raw/Poverty")
f.list <- list.files(dir)
df <- read_csv(file.path(dir, f.list[i])) %>%
rename(group = `Label (Grouping)`) %>%
# select cols that have the estimate of interest
select(group, contains("Percent below poverty level")) %>%
# further select 'estimate' instead of 'standard error'
select(group, contains('Estimate'))
str_extract(f.list[i], "-[]")
str_extract(f.list[i], "[^.]*")
year <- str_extract(f.list[i], "-[]") %>%
str_split("-") %>%
unlist() %>%
slice(2)
year <- str_extract(f.list[i], "[^.]*") %>%
str_split("-") %>%
unlist() %>%
slice(2)
year <- str_extract(f.list[i], "[^.]*") %>%
str_split("-") %>%
slice(2)
fname.list <- str_extract(f.list[i], "[^.]*") %>%
str_split("-")
View(fname.list)
fname.list <- str_extract(f.list[i], "[^.]*") %>%
str_split("-") %>%
unlist()
fname.list
year <- fname.list[2]
##################################################
# Author: Scott Kjorlien
# Date: 4/29/2022
# Description:
#     Take Census Poverty Survey data, clean it, and combine years into one file
##################################################
# set up dir and file list
dir <- here("data/raw/Poverty")
f.list <- list.files(dir)
out <- data.frame()
# loop through files
for(i in 1:length(f.list)){
# get the year of this file
fname.list <- str_extract(f.list[i], "[^.]*") %>%
str_split("-") %>%
unlist()
year <- fname.list[2]
#read in this dataset
df <- read_csv(file.path(dir, f.list[i])) %>%
rename(group = `Label (Grouping)`) %>%
# select cols that have the estimate of interest
select(group, contains("Percent below poverty level")) %>%
# further select 'estimate' instead of 'standard error'
select(group, contains('Estimate'))
# select rows that include the age groupings (can modify for other estimates.)
df <- df[1:6, ]
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate) %>%
select(!AGE) %>%
select(!contains("Related"))
# rename cols
names(tdf) <- c("state", "total", "U18", "18to64", "65o")
# add year
tdf$year <- year
out <- rbind(out, tdf)
}
head(out)
View(out)
416*19
52*19
52*8
i <- 9
# get the year of this file
fname.list <- str_extract(f.list[i], "[^.]*") %>%
str_split("-") %>%
unlist()
year <- fname.list[2]
#read in this dataset
df <- read_csv(file.path(dir, f.list[i])) %>%
rename(group = `Label (Grouping)`) %>%
# select cols that have the estimate of interest
select(group, contains("Percent below poverty level")) %>%
# further select 'estimate' instead of 'standard error'
select(group, contains('Estimate'))
df <- df[1:12, ]
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate) %>%
select(!AGE) %>%
select(!contains("Related"))
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate)
View(tdf)
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate) %>%
select(c(1, 2, 4, 8, 12))
View(tdf)
names(tdf) <- c("state", "total", "U18", "18to64", "65o")
# add year
tdf$year <- year
View(tdf)
i <- 10
# get the year of this file
fname.list <- str_extract(f.list[i], "[^.]*") %>%
str_split("-") %>%
unlist()
year <- fname.list[2]
#read in this dataset
df <- read_csv(file.path(dir, f.list[i])) %>%
rename(group = `Label (Grouping)`) %>%
# select cols that have the estimate of interest
select(group, contains("Percent below poverty level")) %>%
# further select 'estimate' instead of 'standard error'
select(group, contains('Estimate'))
df <- df[1:12, ]
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate) %>%
select(c(1, 2, 4, 8, 12))
View(tdf)
##################################################
# Author: Scott Kjorlien
# Date: 4/29/2022
# Description:
#     Take Census Poverty Survey data, clean it, and combine years into one file
##################################################
# TODO: the blueprint of the CSV for 2018 & 2019 includes more granular age
# categories.... modify to handle those as well...
# set up dir and file list
dir <- here("data/raw/Poverty")
f.list <- list.files(dir)
out <- data.frame()
i <- 10
# loop through files
for(i in 1:length(f.list)){
# get the year of this file
fname.list <- str_extract(f.list[i], "[^.]*") %>%
str_split("-") %>%
unlist()
year <- fname.list[2]
#read in this dataset
df <- read_csv(file.path(dir, f.list[i])) %>%
rename(group = `Label (Grouping)`) %>%
# select cols that have the estimate of interest
select(group, contains("Percent below poverty level")) %>%
# further select 'estimate' instead of 'standard error'
select(group, contains('Estimate'))
# select rows that include the age groupings (can modify for other estimates.)
# the specification of 2018+ years is different. handle 'em differently.
if (year < 2018) {
df <- df[1:6, ]
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate) %>%
select(!AGE) %>%
select(!contains("Related"))
# rename cols
names(tdf) <- c("state", "total", "U18", "18to64", "65o")
} else {
df <- df[1:12, ]
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate) %>%
select(c(1, 2, 4, 8, 12))
}
names(tdf) <- c("state", "total", "U18", "18to64", "65o")
# add year
tdf$year <- year
out <- rbind(out, tdf)
}
write_csv(out, here("data/clean/poverty_rates.csv"))
##################################################
# Author: Scott Kjorlien
# Date: 4/29/2022
# Description:
#     Take Census Poverty Survey data, clean it, and combine years into one file
##################################################
# TODO: the blueprint of the CSV for 2018 & 2019 includes more granular age
# categories.... modify to handle those as well...
# set up dir and file list
dir <- here("data/raw/Poverty")
f.list <- list.files(dir)
out <- data.frame()
i <- 10
# loop through files
for(i in 1:length(f.list)){
# get the year of this file
fname.list <- str_extract(f.list[i], "[^.]*") %>%
str_split("-") %>%
unlist()
year <- fname.list[2]
#read in this dataset
df <- read_csv(file.path(dir, f.list[i])) %>%
rename(group = `Label (Grouping)`) %>%
# select cols that have the estimate of interest
select(group, contains("Percent below poverty level")) %>%
# further select 'estimate' instead of 'standard error'
select(group, contains('Estimate'))
# select rows that include the age groupings (can modify for other estimates.)
# the specification of 2018+ years is different. handle 'em differently.
if (year < 2018) {
df <- df[1:6, ]
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate) %>%
select(!AGE) %>%
select(!contains("Related"))
# rename cols
names(tdf) <- c("state", "total", "U18", "18to64", "65o")
} else {
df <- df[1:12, ]
tdf <- df %>%
pivot_longer(contains("!!"), names_to = "state", values_to = "estimate") %>%
# clean up state names
mutate(state = str_extract(state, "[^!!]*")) %>%
pivot_wider(id_cols=state, names_from = group, values_from = estimate) %>%
select(c(1, 2, 4, 8, 12))
}
names(tdf) <- c("state", "total", "U18", "18to64", "65o")
# add year
tdf$year <- year
out <- rbind(out, tdf)
}
write_csv(out, here("data/clean/poverty_rates.csv"))
df <- read_csv(here("data/raw/SEER/census.csv"))
colnames(df)
head(df)
summarise(df$registry)
summary(df$registry)
summary(as.factor(df$registry))
summary(as_factor(df$age))
colnames(df)
df <- read_csv(here("data/raw/SEER/census.csv")) %>%
group_by(year, state, race, origin, sex, age) %>%
summarize(pop = sum(pop))
df <- read_csv(here("data/raw/SEER/census.csv")) %>%
mutate(pop = as.numeric(pop)) %>%
group_by(year, state, race, origin, sex, age) %>%
summarize(pop = sum(pop))
6834149 / 122208
View(df)
df <- read_csv(here("data/raw/SEER/census.csv")) %>%
mutate(pop = as.numeric(pop)) %>%
group_by(year, state, race, sex, age) %>%
summarize(pop = sum(pop))
df
colnames(df)
df <- read_csv(here("data/raw/SEER/census.csv")) %>%
mutate(pop = as.numeric(pop)) %>%
group_by(year, state, race, sex, age) %>%
summarize(pop = sum(pop)) %>%
pivot_wider(id_cols = c(year, state), names_from = c(race, sex, age), values_from = pop)
df
df <- read_csv(here("data/raw/SEER/census.csv")) %>%
mutate(pop = as.numeric(pop)) %>%
group_by(year, state, race, sex, age) %>%
summarize(pop = sum(pop)) %>%
mutate(sex = ifelse(sex == 1, "m", "f"),
race = ifelse(race == 1, "w", ifelse(race == 2, "b", "n"))) %>%
pivot_wider(id_cols = c(year, state), names_from = c(race, sex, age), values_from = pop)
colnames(df)
##############################################
# Author: Scott Kjorlien
# Date: 4/30/2022
# Description:
#   take the census csv, and aggregate populations by state, year, race, sex, and age group.
#
##############################################
rm(list=ls())
df <- read_csv(here("data/raw/SEER/census.csv")) %>%
mutate(pop = as.numeric(pop)) %>%
group_by(year, state, race, sex, age) %>%
summarize(pop = sum(pop)) %>%
mutate(sex = ifelse(sex == 1, "m", "f"),
race = ifelse(race == 1, "w", ifelse(race == 2, "b", "n"))) %>%
pivot_wider(id_cols = c(year, state), names_from = c(race, sex, age), values_from = pop)
df <- read_csv(here("data/raw/SEER/census.csv")) %>%
mutate(pop = as.numeric(pop)) %>%
group_by(year, state, race, sex, age) %>%
summarize(pop = sum(pop)) %>%
mutate(sex = case_when(
sex == 1 ~ "m",
sex == 2 ~ "f"
),
race = case_when(
race == 1 ~ "w",
race == 2 ~ "b",
race == 3 ~ "n"
),
age = case_when(
age == "00" ~ "0",
age == "01" ~ "1-4",
age == "02" ~ "5-9",
age == "03" ~ "10-14",
age == "04" ~ "15-19",
age == "05" ~ "20-24",
age == "06" ~ "25-29",
age == "07" ~ "30-34",
age == "08" ~ "35-39",
age == "09" ~ "40-44",
age == "10" ~ "45-49",
age == "11" ~ "50-54",
age == "12" ~ "55-59",
age == "13" ~ "60-64",
age == "14" ~ "65-69",
age == "15" ~ "70-74",
age == "16" ~ "75-79",
age == "17" ~ "80-84",
age == "18" ~ "85o"
)) %>%
pivot_wider(id_cols = c(year, state), names_from = c(race, sex, age), values_from = pop)
colnames(df)
3*2*19
?pivot_wider
df <- read_csv(here("data/raw/SEER/census.csv")) %>%
mutate(pop = as.numeric(pop)) %>%
group_by(year, state, race, sex, age) %>%
summarize(pop = sum(pop)) %>%
mutate(sex = case_when(
sex == 1 ~ "m",
sex == 2 ~ "f"
),
race = case_when(
race == 1 ~ "w",
race == 2 ~ "b",
race == 3 ~ "n"
),
age = case_when(
age == "00" ~ "0",
age == "01" ~ "1-4",
age == "02" ~ "5-9",
age == "03" ~ "10-14",
age == "04" ~ "15-19",
age == "05" ~ "20-24",
age == "06" ~ "25-29",
age == "07" ~ "30-34",
age == "08" ~ "35-39",
age == "09" ~ "40-44",
age == "10" ~ "45-49",
age == "11" ~ "50-54",
age == "12" ~ "55-59",
age == "13" ~ "60-64",
age == "14" ~ "65-69",
age == "15" ~ "70-74",
age == "16" ~ "75-79",
age == "17" ~ "80-84",
age == "18" ~ "85o"
)) %>%
pivot_wider(id_cols = c(year, state), names_from = c(race, sex, age),
names_prefix = "pop", values_from = pop)
colnames(df)
##############################################
# Author: Scott Kjorlien
# Date: 4/30/2022
# Description:
#   take the census csv, and aggregate populations by state, year, race, sex, and age group.
#   output a csv with the aggregated data
##############################################
rm(list=ls())
df <- read_csv(here("data/raw/SEER/census.csv")) %>%
mutate(pop = as.numeric(pop)) %>%
group_by(year, state, race, sex, age) %>%
summarize(pop = sum(pop)) %>%
mutate(sex = case_when(
sex == 1 ~ "m",
sex == 2 ~ "f"
),
race = case_when(
race == 1 ~ "w",
race == 2 ~ "b",
race == 3 ~ "n"
),
age = case_when(
age == "00" ~ "0",
age == "01" ~ "1-4",
age == "02" ~ "5-9",
age == "03" ~ "10-14",
age == "04" ~ "15-19",
age == "05" ~ "20-24",
age == "06" ~ "25-29",
age == "07" ~ "30-34",
age == "08" ~ "35-39",
age == "09" ~ "40-44",
age == "10" ~ "45-49",
age == "11" ~ "50-54",
age == "12" ~ "55-59",
age == "13" ~ "60-64",
age == "14" ~ "65-69",
age == "15" ~ "70-74",
age == "16" ~ "75-79",
age == "17" ~ "80-84",
age == "18" ~ "85o"
)) %>%
pivot_wider(id_cols = c(year, state), names_from = c(race, sex, age),
names_prefix = "pop_", values_from = pop) %>%
write_csv(here("data/clean/population.csv"))
